// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.alibaba.arouter'
buildscript {
    apply from: 'config.gradle'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath build_plugins.android_gradle
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath "com.alibaba:arouter-register:1.0.2"
        classpath 'com.yanzhenjie.andserver:plugin:2.1.8'
        //升级 热更新
        classpath "com.tencent.bugly:tinker-support:1.2.1"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url "https://jitpack.io" }
        // 如果需要使用华为推送HMS，则需要加上此句
        maven { url 'http://developer.huawei.com/repo' }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'androidx.appcompat') {
                details.useVersion versions.appcompat
            }
            if (requested.group == 'androidx.core') {
                details.useVersion versions.core
            }
            if (requested.group == 'androidx.lifecycle') {
                details.useVersion versions.lifecycle
            }
            if (requested.group == 'androidx.paging') {
                details.useVersion versions.paging
            }
            if (requested.group == 'androidx.recyclerview') {
                details.useVersion versions.recyclerview
            }
            if (requested.group == 'androidx.fragment') {
                details.useVersion versions.fragment
            }
            if (requested.group == 'androidx.multidex') {
                details.useVersion versions.multidex
            }
            if (requested.group == 'androidx.collection') {
                details.useVersion versions.collection
            }
        }
    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}


